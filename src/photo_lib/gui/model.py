from photo_lib.PhotoDatabase import PhotoDb, DatabaseEntry
from typing import List

class Model:
    pdb: PhotoDb = None
    files: List[DatabaseEntry]

    def __init__(self):
        # TODO implement this correctly, this is only for testing purposes.
        self.pdb = PhotoDb(root_dir="/media/alisot2000/DumpStuff/Photo_Library_Testing/")
        _, self.files, _ = self.pdb.get_duplicate_entry()


    @staticmethod
    def process_metadata(metadict: dict):
        """
        Parse the Metadata dict and convert it into a text string that can be displayed.

        :param metadict: dictionary of metadata, generated by the exiftool

        :return: metadata string, file size string
        """
        keys = metadict.keys()
        key_list = list(keys)
        key_list.sort()
        file_size = ""

        result = f"Number of Attributes: {len(key_list)}\n"

        for key in key_list:
            result += f"{key}: {metadict.get(key)}\n"
            if key == "File:FileSize":
                file_size = f"File Size: {int(metadict.get(key)):,}".replace(",", "'")

        return result, file_size

